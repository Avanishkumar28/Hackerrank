package av.java.algo;

public class StringInString {

	public static void main(String[] args) {
		String line = "TODOAutogeneratedmethodstubothadfjasdfjthosdafnlsdfnhto";
		String sub = "tho";
		String permute = null;
		while((permute = permute(sub, 0, sub.length())) != null){
			System.out.println(permute+" --- "+(line.indexOf(permute)>=0?1:0));
		}
		
		
	}

	  /**
     * permutation function
     * @param str string to calculate permutation for
     * @param l starting index
     * @param r end index
     */
    public static String permute(String str, int l, int r){
        if (l == r)
            System.out.println(str);
        else{
        	boolean allDone = false;
            for (int i = l; i <= r; i++){
                str = swap(str,l,i);
                permute(str, l+1, r);
                str = swap(str,l,i);
                if(i==r)
                	allDone = true;
            }
            if (allDone) {
				
			}
        }
        
        return str;
    }
 
    /**
     * Swap Characters at position
     * @param a string value
     * @param i position 1
     * @param j position 2
     * @return swapped string
     */
    public static String swap(String a, int i, int j){
        char temp;
        char[] charArray = a.toCharArray();
        temp = charArray[i] ;
        charArray[i] = charArray[j];
        charArray[j] = temp;
        return String.valueOf(charArray);
    }
 
}
